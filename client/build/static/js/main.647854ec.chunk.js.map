{"version":3,"sources":["store/actions/alert.js","store/actions/actionTypes.js","utils/setAuthToken.js","store/actions/auth.js","components/Layout/Navbar.js","components/Layout/Landing.js","components/Form/FormGroupField.js","components/Sessions/SignUp.js","components/Sessions/SignIn.js","components/Layout/Alert.js","store/actions/profile.js","components/Layout/Spinner/Spinner.js","components/Dashboard/DashboardLinks.js","components/Dashboard/ExperienceList.js","components/Dashboard/EducationList.js","components/Dashboard/Dashboard.js","components/Profile/CreateOrUpdateProfile.js","components/Profile/UpdateExperience.js","components/Profile/UpdateEducation.js","components/Profiles/ProfileItem.js","components/Profiles/Profiles.js","components/Profile/About.js","components/Profile/ProfileTop.js","components/Profile/Experience.js","components/Profile/Education.js","components/Profile/GithubRepos.js","components/Profile/Profile.js","components/Posts/PostItem.js","store/actions/post.js","components/Posts/PostForm.js","components/Posts/Posts.js","components/Post/Comment.js","components/Post/CommentItem.js","components/Post/Post.js","components/Routing/PrivateRoute.js","store/reducers/alert.js","store/reducers/auth.js","store/reducers/profile.js","store/reducers/post.js","store/reducers/index.js","store/store.js","App.js","index.js"],"names":["setAlert","msg","alertType","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","signOut","props","userLinks","to","className","onClick","guessLinks","loading","isAuthenticated","console","log","FormGroupField","placeholder","name","value","required","minLength","subText","icons","iconClassName","onChange","text","onSetAlert","onSignUp","newUser","first_name","last_name","email","password","config","body","JSON","stringify","post","error","response","errors","forEach","signUp","useState","password_confirmation","setData","handleOnChange","e","target","onSubmit","preventDefault","SignIn","signIn","propsTypes","PropTypes","func","isRequired","bool","alerts","alert","length","map","key","getCurrentProfile","status","deleteExperienceOrEducation","isExperience","uri","delete","statusText","spinner","DashboardLinks","experience","experienceRows","exp","_id","company","title","format","moment","utc","from","education","educationRows","edu","school","degree","Dashboard","deleteAccount","user","profile","fullName","useEffect","content","propTyes","object","window","confirm","initialState","current_position","skills","headline","location","website","bio","github_username","youtube","twitter","instagram","linkedin","facebook","CreateOrUpdateProfile","createOrUpdateProfile","history","profileData","setProfileData","displaySocialInputs","setSocialInputs","social","Array","isArray","join","cols","rows","isUpdated","push","updateExperience","experienceData","put","current","description","setExperienceData","toDateDisabled","toggleDisabled","handleOnclick","check","disable","updateEducation","educationData","field_of_study","setEducationData","ProfileItem","avatar","src","alt","skill","index","getProfiles","profiles","About","ProfileTop","currentJob","href","rel","Experience","Education","repos","getGithubRepos","user_name","username","repo","html_url","Profile","match","getProfileByUserId","params","propsType","user_id","PostItem","addLikes","removeLikes","deletePost","likes","comments","date","showActions","defaultProps","postId","addPost","postData","setText","getPosts","posts","addComment","commentData","deleteComment","commentId","comment","getPost","Component","component","rest","render","action","filter","getItem","actions","setItem","removeItem","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","SignUp","Profiles","CreateProfile","EditProfile","UpdateExperience","UpdateEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.647854ec.chunk.js","sourcesContent":["import * as actions from './actionTypes';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const setAlert = (msg, alertType) => dispatch => {\n    const id = uuidv4();\n    dispatch({\n        type: actions.SET_ALERT,\n        payload: { msg, alertType, id }\n    });\n    setTimeout(() => dispatch({ type: actions.REMOVE_ALERT, payload: id}), 5000);\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const SIGNIN_SUCCESS = 'SIGNIN_SUCCESS';\nexport const SIGNIN_FAIL = 'SIGNIN_FAIL';\nexport const SIGNOUT = 'SIGNOUT';\nexport const GET_PROFILE = 'GET_PROFILE'\nexport const GET_PROFILES = 'GET_PROFILES'\nexport const GET_REPOS = 'GET_REPOS'\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE'\nexport const PROFILE_ERROR = 'PROFILE_ERROR'\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'\nexport const GET_POSTS = 'GET_POSTS'\nexport const GET_POST = 'GET_POST'\nexport const ADD_POST = 'ADD_POST'\nexport const POST_ERROR = 'POST_ERROR'\nexport const DELETE_POST = 'DELETE_POST'\nexport const UPDATE_LIKES = 'UPDATE_LIKES'\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const DELETE_COMMENT = 'DELETE_COMMENT'","import axios from 'axios';\nconst setAuthToken = (token) => {\n    if(token){\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    AUTH_FAIL,\n    USER_LOADED,\n    SIGNIN_SUCCESS,\n    SIGNIN_FAIL,\n    SIGNOUT,\n    CLEAR_PROFILE\n} from \"./actionTypes\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from '../../utils/setAuthToken';\n\nexport const loadUser = () => async dispatch => {\n    if(localStorage.token){\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res = await axios.get('/api/auth');\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch (e) {\n        dispatch({\n            type: AUTH_FAIL\n        });\n    }\n};\n\n// Signup user\nexport const signUp = ({first_name, last_name, email, password}) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({first_name, last_name, email,password});\n    try {\n        const res = await axios.post('/api/users', body,config);\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n\n    } catch(e) {\n        console.error(e.response.data.errors);\n        const errors = e.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({type: SIGNUP_FAIL});\n    }\n};\n\nexport const signIn = (email, password ) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({ email,password });\n    try {\n        const res = await axios.post('/api/auth', body,config);\n        dispatch({\n            type: SIGNIN_SUCCESS,\n            payload: res.data\n        })\n        dispatch(loadUser());\n    } catch(e) {\n        console.error(e.response.data.errors);\n        const errors = e.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({type: SIGNIN_FAIL});\n    }\n}\n\nexport const  signOut = () => async  dispatch => {\n    dispatch({type: SIGNOUT})\n    dispatch({type: CLEAR_PROFILE})\n}","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut} from \"../../store/actions/auth\";\nimport PropTypes from 'prop-types';\n\nconst Navbar = (props) => {\n    const { signOut, auth } = props\n\n    const userLinks = (\n        <ul>\n            <li><Link to=\"/profiles\">Profiles</Link></li>\n            <li>\n                <Link to=\"/dashboard\">\n                    <i className='fas fa-user'></i> {' '}\n                    <span className='hide-sm'> Dashboard </span>\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/posts\">\n                    <i className='fas fa-user'></i> {' '}\n                    <span className='hide-sm'> Posts </span>\n                </Link>\n            </li>\n            <li>\n                <Link to='#!' onClick={signOut}>\n                    <i className='fas fa-sign-out-alt'></i> {' '}\n                    <span className='hide-sm'> Sign Out </span>\n                </Link>\n            </li>\n        </ul>\n    )\n\n    const guessLinks = (\n        <ul>\n            <li><Link to=\"/profiles\">Profiles</Link></li>\n            <li><Link to=\"/signup\">Sign Up</Link></li>\n            <li><Link to=\"/signin\">Sign In</Link></li>\n        </ul>\n    )\n\n    return (\n        <nav className=\"navbar bg-dark\">\n            <h1>\n                <Link to='/'><i className=\"fas fa-link\"></i> Enlaces</Link>\n            </h1>\n            { !auth.loading &&\n                <Fragment>\n                    {auth.isAuthenticated ? userLinks : guessLinks }\n                </Fragment>\n            }\n        </nav>\n    )\n}\nNavbar.propTypes = {\n    signOut: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nexport default connect(mapStateToProps, { signOut } )(Navbar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nconst Landing = ( { isAuthenticated }) => {\n    console.log('isAuthenticated ', isAuthenticated);\n    if(isAuthenticated) {\n        return <Redirect to='/dashboard' />\n    }\n    return (\n        <section className=\"landing\">\n            <div className=\"dark-overlay\">\n                <div className=\"landing-inner\">\n                    <h1 className=\"x-large\">Enlaces</h1>\n                    <p className=\"lead\">\n                        Create a Professional profile/portfolio, share posts and get help from\n                        other people\n                    </p>\n                    <div className=\"buttons\">\n                        <Link to=\"/signup\" className=\"btn btn-primary\">Sign Up</Link>\n                        <Link to=\"/signin\" className=\"btn btn-light\">Sign In</Link>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nLanding.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\nexport default connect(mapStateToProps)(Landing);\n","import React from 'react';\n\nconst FormGroupField = (props) => {\n    const { className, placeholder, name, value, required, minLength } = props\n    let type = props.type ? props.type  : 'text';\n    let subText = null;\n    if(props.subText){\n        subText = (\n            <small className=\"form-text\">\n                { props.subText }\n        </small>)\n    }\n    let icons = null;\n    if(props.iconClassName){\n        icons = ( <i className={props.iconClassName}></i>)\n    }\n    return (\n        <div className={`form-group ${className}`}>\n            {/*<label>From</label>*/}\n            {icons}\n            <input\n                type={type}\n                placeholder={placeholder}\n                name= {name}\n                value={value}\n                onChange={ props.onChange }\n                required = {required}\n                minLength={minLength}\n            /> { \" \" }\n            {  props.text }\n            { subText }\n        </div>\n    )\n}\n\nexport default FormGroupField;","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport FormGroupField from \"../Form/FormGroupField\";\n\nimport { setAlert } from \"../../store/actions/alert\"\nimport { signUp } from \"../../store/actions/auth\";\n\nconst SignUp = (props) => {\n    const [data, setData] = useState({\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        password_confirmation: ''\n    });\n\n    const { first_name, last_name, email, password, password_confirmation } = data;\n    const handleOnChange = (e) => {\n        setData({...data, [e.target.name]: e.target.value})\n    }\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if(password !== password_confirmation){\n            props.onSetAlert('Password do not match', 'danger');\n        }else{\n            const newUser = { first_name, last_name, email, password}\n            props.onSignUp(newUser);\n        }\n    }\n    if(props.isAuthenticated){\n        return <Redirect to='/dashboard' />\n    }\n    return (\n        <div className='wrapper'>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n            <form className=\"form\" onSubmit={e=> onSubmit(e)}>\n                <FormGroupField\n                    placeholder = 'First name'\n                    name='first_name'\n                    value={first_name}\n                    onChange={ e=> handleOnChange(e) }\n                    // required='required'\n                />\n                <FormGroupField\n                    placeholder = 'Last name'\n                    name='last_name'\n                    value={last_name}\n                    onChange={ e=> handleOnChange(e) }\n                    // required='required'\n                />\n                <FormGroupField\n                    placeholder = 'Email'\n                    name='email'\n                    value={email}\n                    onChange={ e=> handleOnChange(e) }\n                    // required='required'\n                    subText= 'This site uses Gravatar so if you want a profile image, use a Gravatar email'\n                />\n\n                <FormGroupField\n                    type='password'\n                    placeholder = 'Password'\n                    name='password'\n                    value={password}\n                    onChange={ e=> handleOnChange(e) }\n                    // required='required'\n                    // minLength = '6'\n                    subText = 'Minimum length 6 characters'\n                />\n                <FormGroupField\n                    type='password'\n                    placeholder = 'Confirm Password'\n                    name='password_confirmation'\n                    value={password_confirmation}\n                    onChange={ e=> handleOnChange(e) }\n                    // required='required'\n                    // minLength = '6'\n                    subText= 'Minimum length 6 characters'\n                />\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\"/>\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </div>\n    )\n}\n\nSignUp.propTypes = {\n    onSetAlert: PropTypes.func.isRequired,\n    onSignUp: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSetAlert: (msg,alertType) => dispatch(setAlert(msg,alertType)),\n        onSignUp:(newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport FormGroupField from \"../Form/FormGroupField\";\nimport { signIn } from \"../../store/actions/auth\";\nimport PropTypes from \"prop-types\";\n\nconst SignIn = ( props) => {\n    const { signIn, isAuthenticated } = props;\n    const [data, setData] = useState({\n        email: '',\n        password: '',\n    });\n\n    const { email, password } = data;\n    const handleOnChange = (e) => {\n        setData({...data, [e.target.name]: e.target.value})\n    }\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        signIn(email, password);\n    }\n\n    if(isAuthenticated) {\n        return <Redirect to='/dashboard' />\n    }\n\n    return (\n        <div className='wrapper'>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Log In </p>\n            <form className=\"form\" onSubmit={e=> onSubmit(e)}>\n                <FormGroupField\n                    placeholder = 'Email'\n                    name='email'\n                    value={email}\n                    onChange={ e=> handleOnChange(e) }\n                    required='required'\n                    subText= 'This site uses Gravatar so if you want a profile image, use a Gravatar email'\n                />\n\n                <FormGroupField\n                    type='password'\n                    placeholder = 'Password'\n                    name='password'\n                    value={password}\n                    onChange={ e=> handleOnChange(e) }\n                    required='required'\n\n                    subText = 'Minimum length 6 characters'\n                />\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign In\"/>\n            </form>\n            <p className=\"my-1\">\n                Don't you have an account? <Link to=\"/signup\">Sign Up</Link>\n            </p>\n        </div>\n    )\n}\n\nSignIn.propsTypes = {\n    signIn: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated\n\n});\nexport default connect(mapStateToProps, { signIn } )(SignIn);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({alerts}) =>\n    alerts !== null && alerts.length > 0 && alerts.map(alert => (\n        <div key={alert.id} className={ `alert alert-${alert.alertType}`}>\n            {alert.msg}\n        </div>\n    ));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => {\n    return {\n        alerts: state.alert\n    }\n\n}\n\nexport default connect(mapStateToProps)(Alert);\n","import axios from 'axios';\nimport { GET_PROFILE,\n    GET_PROFILES,\n    GET_REPOS,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    CLEAR_PROFILE,\n    ACCOUNT_DELETED\n} from \"./actionTypes\";\n\nimport {setAlert} from \"./alert\";\n\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n    } catch(e){\n        dispatch({ type: CLEAR_PROFILE });\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: e.response.data.msg, status: e.response.status}\n        })\n    }\n};\n\nexport const getProfiles = () => async dispatch => {\n    dispatch({type: CLEAR_PROFILE })\n    try {\n        const res = await axios.get('/api/profile');\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        })\n    } catch(e){\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: e.response.data.msg, status: e.response.status}\n        })\n    }\n};\n\nexport const getProfileByUserId = (user_id) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/user/${user_id}`);\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n    } catch(e){\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: e.response.data.msg, status: e.response.status}\n        })\n    }\n};\n\nexport const getGithubRepos = (user_name) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/github/${user_name}`);\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        })\n    } catch(e){\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: e.response.data.msg, status: e.response.status}\n        })\n    }\n};\n\nexport const createOrUpdateProfile = (profileData, history, isUpdated = true) => async dispatch => {\n    try{\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.post('/api/profile', profileData, config)\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n\n        const message = isUpdated ? 'Profile updated' : 'Profile created';\n        dispatch( setAlert(message, 'success'));\n\n        if(!isUpdated){\n            history.push('/dashboard');\n        }\n\n    }catch(e){\n        console.error(e.response.data.errors);\n        const errors = e.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status }\n        });\n    }\n};\n\nexport const updateExperience = (experienceData, history) => async dispatch=> {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.put('/api/profile/experience', experienceData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n        dispatch( setAlert('Experience updated', 'success'));\n        history.push('/dashboard');\n    } catch (e) {\n        console.error(e.response.data.errors);\n        const errors = e.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status }\n        });\n    }\n};\n\nexport const updateEducation = (educationData, history) => async dispatch=> {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.put('/api/profile/education', educationData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n        dispatch( setAlert('Education updated', 'success'));\n        history.push('/dashboard');\n    } catch (e) {\n        console.error(e.response.data.errors);\n        const errors = e.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status }\n        });\n    }\n};\n\nexport const deleteExperienceOrEducation = (id, isExperience = true) => async dispatch => {\n    try {\n        console.log(id);\n        const uri = `/api/profile/${isExperience ? `experience/${id}` : `education/${id}`}`\n        const res = await axios.delete(uri);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n        const msg = isExperience ? 'Experienced deleted' : 'Education deleted'\n        dispatch(setAlert(msg, 'success'));\n    } catch (e) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status }\n        });\n    }\n};\n\n// Delete account & profile\nexport const deleteAccount = () => async dispatch => {\n    if (window.confirm('Are you sure? This can NOT be undone!')) {\n        try {\n            await axios.delete('/api/profile');\n\n            dispatch({ type: CLEAR_PROFILE });\n            dispatch({ type: ACCOUNT_DELETED });\n\n            dispatch(setAlert('Your account has been permanently deleted'));\n        } catch (e) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: { msg: e.response.statusText, status: e.response.status }\n            });\n        }\n    }\n};\n","import React from 'react';\nimport './Spinner.css';\n\nconst spinner =() => (\n    <div className='Loader'>Loading...</div>\n\n);\n\nexport default spinner;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DashboardLinks = () => {\n\n    return (\n        <div className=\"dash-buttons\">\n            <Link to=\"/edit-profile\" className=\"btn btn-light\">\n                <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\n            </Link>\n            <Link to=\"/update-experience\" className=\"btn btn-light\">\n                <i className=\"fab fa-black-tie text-primary\"></i> + Experience\n            </Link>\n            <Link to=\"/update-education\" className=\"btn btn-light\">\n                <i className=\"fas fa-graduation-cap text-primary\"></i> + Education\n            </Link>\n        </div>\n    )\n};\n\nexport default DashboardLinks;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from \"react-moment\";\nimport moment from 'moment';\nimport { deleteExperienceOrEducation } from '../../store/actions/profile';\n\nconst ExperienceList = ({ experience, deleteExperienceOrEducation  }) => {\n    console.log(experience)\n    const experienceRows = experience.map(exp => (\n        <tr key={exp._id} >\n            <td>{exp.company}</td>\n            <td className='hide-sm'>{exp.title}</td>\n            <td>\n                <Moment format=\"YYYY/MM/DD\">{moment.utc(exp.from)}</Moment> -{' '}\n                {exp.to === null ? (' Now') : (\n                    <Moment format=\"YYYY/MM/DD\">{moment.utc(exp.to)}</Moment>\n                )}\n            </td>\n            <td>\n                <button\n                    className='btn btn-danger'\n                    onClick={()=>deleteExperienceOrEducation(exp._id) }\n                >\n                    <i className=\"far fa-trash-alt\"></i>\n                </button>\n            </td>\n        </tr>\n\n    ))\n    return (\n        <div>\n            <h2>Experiences</h2>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Company</th>\n                        <th className='hide-sm'>Title</th>\n                        <th className=' hide-sm'>Years</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {experienceRows}\n                </tbody>\n            </table>\n        </div>\n    );\n}\nExperienceList.propTypes = {\n    experience: PropTypes.array.isRequired,\n    deleteExperience: PropTypes.func\n}\n\nexport default connect(null, { deleteExperienceOrEducation } )(ExperienceList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from \"react-moment\";\nimport moment from 'moment';\nimport { deleteExperienceOrEducation } from '../../store/actions/profile';\nimport {Link} from \"react-router-dom\";\n\nconst EducationList = ({ education, deleteExperienceOrEducation }) => {\n    const educationRows = education.map(edu => (\n        <tr key={edu._id} >\n            <td>{edu.school}</td>\n            <td className='hide-sm'>{edu.degree}</td>\n            <td>\n                <Moment format=\"YYYY/MM/DD\">{moment.utc(edu.from)}</Moment> - {' '}\n                {edu.to === null ? (\n                    ' Now'\n                ) : (\n                    <Moment format=\"YYYY/MM/DD\">{moment.utc(edu.to)}</Moment>\n                )}\n            </td>\n            <td>\n                <Link\n                    className='btn btn-danger'\n                    onClick={()=>deleteExperienceOrEducation(edu._id) }\n                >\n                    <i className=\"far fa-trash-alt\"></i>\n                </Link>\n            </td>\n        </tr>\n\n    ))\n    return (\n        <div>\n            <h2>Education</h2>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>School</th>\n                    <th className='hide-sm'>Degree</th>\n                    <th className=' hide-sm'>Years</th>\n                </tr>\n                </thead>\n                <tbody>\n                { educationRows }\n                </tbody>\n            </table>\n        </div>\n    )\n}\nEducationList.propTypes = {\n    education: PropTypes.array.isRequired,\n    deleteExperienceOrEducation: PropTypes.func.isRequired\n}\n\nexport default connect(null, { deleteExperienceOrEducation })(EducationList);","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCurrentProfile, deleteAccount } from \"../../store/actions/profile\";\nimport Spinner from '../Layout/Spinner/Spinner';\nimport DashboardLinks from \"./DashboardLinks\";\nimport ExperienceList from \"./ExperienceList\";\nimport EducationList from \"./EducationList\";\n\nconst Dashboard = ({ getCurrentProfile,\n                       deleteAccount,\n                       auth: { user },\n                       profile: { profile, loading} }) => {\n\n    const fullName = user ? `${user.first_name} ${user.last_name}` : ''\n\n    useEffect(() => {\n        getCurrentProfile();\n    },[getCurrentProfile]);\n\n    let content = ''\n    if (profile === null) {\n        content = (\n            <div>\n                <p>You have not yet setup a profile, please add some info</p>\n                <Link to='/create-profile' className='btn btn-primary my-1'>Create Profile</Link>\n            </div>\n        )\n    }else{\n        content = (\n            <Fragment>\n                <DashboardLinks />\n                { profile.experience && profile.experience.length > 0 && <ExperienceList experience={profile.experience}/>}\n                { profile.education && profile.education.length > 0 && <EducationList education={profile.education}/> }\n                <div className=\"my-2\">\n                    <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n                        <i className=\"fas fa-user-minus\" /> Delete My Account\n                    </button>\n                </div>\n            </Fragment>\n            )\n    }\n\n    return loading && profile === null ? (\n        <Spinner />\n        ) : (\n            <Fragment>\n                <p className=\"lead\"><i className=\"fas fa-user\"></i> Welcome { fullName }</p>\n                { content }\n            </Fragment>\n\n    )\n}\n\nDashboard.propTyes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    deleteAccount: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n})\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount } )(Dashboard);","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createOrUpdateProfile, getCurrentProfile } from '../../store/actions/profile';\n\nimport FormGroupField from \"../Form/FormGroupField\";\n\nconst initialState = {\n    current_position: '',\n    skills: '',\n    headline: '',\n    company: '',\n    location: '',\n    website: '',\n    bio: '',\n    github_username: '',\n    youtube: '',\n    twitter: '',\n    instagram: '',\n    linkedin: '',\n    facebook: ''\n}\n\nconst CreateOrUpdateProfile = ({ profile: { profile, loading },\n        createOrUpdateProfile,\n        getCurrentProfile,\n        history } ) => {\n\n    const [profileData, setProfileData] = useState(initialState);\n    const [displaySocialInputs, setSocialInputs] = useState();\n    const {\n        current_position,\n        skills,\n        headline,\n        company,\n        location,\n        website,\n        bio,\n        github_username,\n        youtube,\n        twitter,\n        instagram,\n        linkedin,\n        facebook\n    } = profileData\n\n\n    useEffect(() => {\n        if (!profile) getCurrentProfile();\n        if (!loading && profile) {\n            const profileData = { ...initialState };\n            for (const key in profile) {\n                if (key in profileData) profileData[key] = profile[key];\n            }\n            for (const key in profile.social) {\n                if (key in profileData) profileData[key] = profile.social[key];\n            }\n            if (Array.isArray(profileData.skills))\n                profileData.skills = profileData.skills.join(', ');\n            setProfileData(profileData);\n        }\n    }, [loading, getCurrentProfile, profile]);\n\n    const handleOnChange = (e) => {\n        setProfileData({...profileData, [e.target.name]: e.target.value})\n    }\n    const onSubmit =(e) => {\n        e.preventDefault();\n        createOrUpdateProfile(profileData, history, profile ? true : false);\n    }\n    return(\n        <div >\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> { profile ? 'Update' : 'Create'} Your Profile</p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e=> onSubmit(e)}>\n                <FormGroupField\n                    placeholder = '* Current Position'\n                    name='current_position'\n                    value={current_position}\n                    onChange={ e=> handleOnChange(e) }\n                    subText='Give us an idea of where you are at in your career'\n                />\n                <FormGroupField\n                    placeholder = '* Skills'\n                    name='skills'\n                    value={skills}\n                    onChange={ e=> handleOnChange(e) }\n                    subText='Please use comma separated values (eg. Ruby, Go, Python, Javascript)'\n                />\n                <FormGroupField\n                    placeholder = 'Your Headline'\n                    name='headline'\n                    value={headline}\n                    onChange={ e=> handleOnChange(e) }\n                    subText='How you introduce yourself'\n                />\n                <FormGroupField\n                    placeholder = 'Company'\n                    name='company'\n                    value={company}\n                    onChange={ e=> handleOnChange(e) }\n                    subText='Could be your own company or one you work for'\n                />\n                <FormGroupField\n                    placeholder = 'Website'\n                    name='website'\n                    value={website}\n                    onChange={ e=> handleOnChange(e) }\n                    subText='Could be your own or a company website'\n                />\n                <FormGroupField\n                    placeholder = 'Location'\n                    name='location'\n                    value={location}\n                    onChange={ e=> handleOnChange(e) }\n                    subText='City & state suggested (eg. San Francisco, CA)'\n                />\n                <FormGroupField\n                    placeholder = 'Github Username'\n                    name='github_username'\n                    value={github_username}\n                    onChange={ e=> handleOnChange(e) }\n                    iconClassName = 'fab fa-github fa-2x'\n                    subText='If you want your latest repos and a Github link, include your username'\n                />\n                <div className=\"form-group\">\n                    <textarea\n                        placeholder=\"A short bio of yourself\"\n                        name=\"bio\"\n                        cols=\"30\"\n                        rows=\"5\"\n                        value={bio}\n                        onChange={ e=> handleOnChange(e) }>\n                    </textarea>\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                    <button onClick={ () => setSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n                        Add Social Network Links\n                    </button>\n                    <span>Optional</span>\n                </div>\n                { displaySocialInputs &&\n                    <Fragment>\n                        <FormGroupField\n                            className='social-input'\n                            placeholder = 'Twitter URL'\n                            name='twitter'\n                            value={twitter}\n                            onChange={ e=> handleOnChange(e) }\n                            iconClassName = 'fab fa-twitter fa-2x'\n                        />\n\n                        <FormGroupField\n                            className='social-input'\n                            placeholder = 'Facebook URL'\n                            name='facebook'\n                            value={facebook}\n                            onChange={ e=> handleOnChange(e) }\n                            iconClassName = 'fab fa-facebook fa-2x'\n                        />\n\n                        <FormGroupField\n                            className='social-input'\n                            placeholder = 'YouTube URL'\n                            name='youtube'\n                            value={youtube}\n                            onChange={ e=> handleOnChange(e) }\n                            iconClassName = 'fab fa-youtube fa-2x'\n                        />\n\n                        <FormGroupField\n                            className='social-input'\n                            placeholder = 'Linkedin URL'\n                            name='linkedin'\n                            value={linkedin}\n                            onChange={ e=> handleOnChange(e) }\n                            iconClassName = 'fab fa-linkedin fa-2x'\n                        />\n\n                        <FormGroupField\n                            className='social-input'\n                            placeholder = 'Instagram URL'\n                            name='instagram'\n                            value={instagram}\n                            onChange={ e=> handleOnChange(e) }\n                            iconClassName = 'fab fa-instagram fa-2x'\n                        />\n                    </Fragment>\n                }\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </div>\n    )\n}\n\nCreateOrUpdateProfile.propTyes = {\n    createOrUpdateProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\nexport default connect(mapStateToProps, { createOrUpdateProfile, getCurrentProfile })(CreateOrUpdateProfile);","import React, {Fragment, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport FormGroupField from \"../Form/FormGroupField\";\nimport { updateExperience }  from '../../store/actions/profile';\n\n\nconst UpdateExperience = ({updateExperience, history}) => {\n    const [experienceData, setExperienceData] = useState({\n        title: '',\n        company: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const {\n        title,\n        company,\n        location,\n        from,\n        to,\n        current,\n        description\n    } = experienceData;\n\n    const handleOnclick = (e) => {\n        setExperienceData({...experienceData, [e.target.name]: e.target.value })\n    }\n    const onSubmit =(e) => {\n        console.log('Submit');\n        e.preventDefault();\n        updateExperience(experienceData, history);\n    }\n    return (\n        <Fragment>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i> Add any positions that you have had in the past\n            </p>\n            <small>* = required field</small>\n            <form onSubmit={(e) => onSubmit(e)} className=\"form\">\n                <FormGroupField\n                    placeholder=\"* Title\"\n                    name=\"title\"\n                    value={title}\n                    onChange={(e) => handleOnclick(e)}\n                    required='required'\n                />\n                <FormGroupField\n                    placeholder=\"* Company\"\n                    name=\"company\"\n                    value={company}\n                    onChange={(e) => handleOnclick(e)}\n                    required='required'\n                />\n                <FormGroupField\n                    placeholder=\"Location\"\n                    name=\"location\"\n                    value={location}\n                    onChange={(e) => handleOnclick(e)}\n                />\n\n                <FormGroupField\n                    type='date'\n                    name=\"from\"\n                    value={from}\n                    subText='From Date'\n                    onChange={(e) => handleOnclick(e)}\n                />\n\n                <FormGroupField\n                    type='checkbox'\n                    name=\"current\"\n                    check={current}\n                    value={current}\n                    onChange={(e) =>{\n                        setExperienceData({...experienceData, current: !current});\n                        toggleDisabled(!toDateDisabled);\n                    }}\n                    text={' Current Position'}\n                />\n                {toDateDisabled ? null : (\n                    <FormGroupField\n                        type='date'\n                        name=\"to\"\n                        value={to}\n                        subText='To Date'\n                        onChange={(e) => handleOnclick(e)}\n                        disable={toDateDisabled ? 'disabled' : ''}\n                    />) }\n\n\n                <div className=\"form-group\">\n                  <textarea\n                      placeholder=\"Job Description\"\n                      name=\"description\"\n                      cols=\"30\"\n                      rows=\"5\"\n                      value={description}\n                      onChange={(e) => handleOnclick(e)}\n                  />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\nUpdateExperience.propTypes = {\n    updateExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null,  { updateExperience } )(UpdateExperience);\n","import React, {Fragment,  useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport FormGroupField from \"../Form/FormGroupField\";\nimport { updateEducation }  from '../../store/actions/profile';\n\nconst UpdateEducation = ({updateEducation, history}) => {\n    const [educationData, setEducationData] = useState({\n        school: '',\n        degree: '',\n        field_of_study: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const {\n        school,\n        degree,\n        field_of_study,\n        from,\n        to,\n        current,\n        description\n    } = educationData;\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const handleOnclick = (e) => {\n        setEducationData({...educationData, [e.target.name]: e.target.value })\n    }\n    const onSubmit =(e) => {\n        e.preventDefault();\n        updateEducation(educationData,history);\n    }\n    return (\n        <Fragment>\n            <p className=\"lead\">\n                <i className=\"fas fa-graduation-cap\"></i> Add any school, online classes, bootcamp etc that you have attended\n            </p>\n            <small>* = required field</small>\n            <form onSubmit={(e) => onSubmit(e)} className=\"form\">\n                <FormGroupField\n                    placeholder=\"* School or Classes\"\n                    name=\"school\"\n                    value={school}\n                    onChange={(e) => handleOnclick(e)}\n                    required='required'\n                />\n                <FormGroupField\n                    placeholder=\"* Degree or Certificate\"\n                    name=\"degree\"\n                    value={degree}\n                    onChange={(e) => handleOnclick(e)}\n                    required='required'\n                />\n                <FormGroupField\n                    placeholder=\"Field Of Study\"\n                    name=\"field_of_study\"\n                    value={field_of_study}\n                    onChange={(e) => handleOnclick(e)}\n                />\n\n                <FormGroupField\n                    type='date'\n                    name=\"from\"\n                    value={from}\n                    onChange={(e) => handleOnclick(e)}\n                    subText='From Date'\n                />\n\n                <FormGroupField\n                    type='checkbox'\n                    name=\"current\"\n                    value={current}\n                    onChange={(e) =>{\n                        setEducationData({...educationData, current: !current});\n                        toggleDisabled(!toDateDisabled);\n                    }}\n                    text='Current School or Classes'\n                    subText='From Date'\n                />\n                {!toDateDisabled &&\n                    <FormGroupField\n                        type='date'\n                        name=\"to\"\n                        value={to}\n                        onChange={(e) => handleOnclick(e)}\n                        disable={toDateDisabled ? 'disabled' : null}\n                        subText='To Date'\n                    />\n                }\n\n\n                <div className=\"form-group\">\n                  <textarea\n                      placeholder=\"Program Description\"\n                      name=\"description\"\n                      cols=\"30\"\n                      rows=\"5\"\n                      value={description}\n                      onChange={(e) => handleOnclick(e)}\n                  />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\nUpdateEducation.propTypes = {\n    updateEducation: PropTypes.func.isRequired\n}\n\nexport default connect(null,  { updateEducation } )(UpdateEducation);\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nconst ProfileItem = ({\n    profile: {\n        user: {_id, first_name, last_name, avatar },\n        current_position,\n        headline,\n        skills,\n        company,\n        location\n\n    }\n}) => {\n    const fullName = `${first_name} ${last_name}`\n    return (\n        <div className='profile bg-light'>\n            <img src={avatar} alt='' className='round-img'/>\n            <div>\n                <h2>{fullName} </h2>\n                <p>{headline}</p>\n                <p>{current_position} {company && <span>at {company}</span>}</p>\n                <p>{location}</p>\n                <Link to={`/profile/${_id}`} > View Profile</Link>\n            </div>\n            <ul>\n                { skills.map((skill, index)=> (\n                    <li key={index} className='text-primary'>\n                        <i className=\"fas fa-check\"></i>\n                        {skill}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default ProfileItem;","import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../Layout/Spinner/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../store/actions/profile';\n\nconst Profiles = ( { getProfiles, profile: { profiles, loading } }) => {\n    useEffect(() => {\n        getProfiles();\n    }, [getProfiles])\n    return(\n        <Fragment>\n            { loading ? <Spinner /> : <Fragment>\n                <h1 className='large text-primary'>Profiles</h1>\n                <p className='lead' >\n                    <i className=\"fas fa-project-diagram\">Browse an connect</i>\n                </p>\n                <div className='profiles'>\n                    { profiles.length > 0 ? (\n                        profiles.map(profile => (\n                            <ProfileItem key={profile._id} profile={profile}/>\n                        ))\n                        ) : <h4>No profiles found ...</h4> }\n                </div>\n            </Fragment> }\n        </Fragment>\n    )\n};\n\nProfiles.propTypes = {\n    profile: PropTypes.object.isRequired,\n    getProfiles: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\n\nexport default connect(mapStateToProps, { getProfiles} )(Profiles);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst About = ({profile: {bio,skills,user: { first_name, last_name }}}) => (\n    <div className='profile-about bg-light p-2'>\n        { bio && (\n            <Fragment>\n                <h2 className='text-primary'>{first_name}'s bio</h2>\n                <p>{bio}</p>\n                <div className='line' />\n            </Fragment>\n        )}\n        <h2 className='text-primary'>Skill Set</h2>\n        <div className='skills'>\n            {skills.map((skill, index) => (\n                <div key={index} className='p-1'>\n                    <i className='fas fa-check' /> {skill}\n                </div>\n            ))}\n        </div>\n    </div>\n);\n\nAbout.propTypes = {\n    profile: PropTypes.object.isRequired\n};\n\nexport default About;\n","import React from 'react';\n\nconst ProfileTop = ({ profile: {\n    current_position,\n    headline,\n    company,\n    location,\n    website,\n    social,\n    user: { first_name, last_name, avatar }}}) => {\n\n    const fullName = `${first_name} ${last_name}`;\n    const currentJob = (\n        company && <span> at {company}</span>\n    )\n    return (\n    <div className=\"profile-top bg-primary p-2\">\n        <img\n            className=\"round-img my-1\"\n            src={avatar}\n            alt=\"\"\n        />\n        <h1 className=\"large\">{fullName}</h1>\n        <p className=\"lead\">{headline}</p>\n        <p className=\"lead\">{current_position} {currentJob}</p>\n        <p>{location}</p>\n        <div className=\"icons my-1\">\n            { website && (\n                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fas fa-globe fa-2x\"></i>\n                </a>\n            )}\n            {social && social.twitter && (\n                <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\n                    <i className='fab fa-twitter fa-2x' />\n                </a>\n            )}\n            {social && social.facebook && (\n                <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\n                    <i className='fab fa-facebook fa-2x' />\n                </a>\n            )}\n            {social && social.linkedin && (\n                <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\n                    <i className='fab fa-linkedin fa-2x' />\n                </a>\n            )}\n            {social && social.youtube && (\n                <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\n                    <i className='fab fa-youtube fa-2x' />\n                </a>\n            )}\n            {social && social.instagram && (\n                <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\n                    <i className='fab fa-instagram fa-2x' />\n                </a>\n            )}\n        </div>\n    </div>\n)\n\n}\nexport default ProfileTop;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from \"react-moment\";\nimport moment from 'moment'\n\nconst Experience = ( { experience: { company, title, location, current, to, from, description}}) => (\n    <div>\n        <h3 className=\"text-dark\">{company}</h3>\n        <p>\n            <Moment format=\"YYYY/MM/DD\">{moment.utc(from)}</Moment> -{' '}\n            {!to ? ' Now' : <Moment format=\"YYYY/MM/DD\">{moment.utc(to)}</Moment>}\n        </p>\n        <p>\n            <strong>Position: </strong> {title}\n        </p>\n        <p>\n            <strong>Location: </strong> {location}\n        </p>\n        { description &&\n            <p>\n                <strong>Description: </strong> {description}\n            </p>\n        }\n\n    </div>\n)\n\nExperience.propTypes = {\n    experience: PropTypes.object.isRequired\n};\n\nexport default Experience;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from \"react-moment\";\nimport moment from 'moment';\n\nconst Education = ( { education: { school, degree, field_of_study, from, to, description }}) => (\n    <div>\n        <h3 className=\"text-dark\">{school}</h3>\n        <p>\n            <Moment format=\"YYYY/MM/DD\">{moment.utc(from)}</Moment> -{' '}\n            {!to ? ' Now' : <Moment format=\"YYYY/MM/DD\">{moment.utc(to)}</Moment>}\n        </p>\n        <p>\n            <strong>Degree: </strong> {degree}\n        </p>\n        <p>\n            <strong>Field Of Study: </strong> {field_of_study}\n        </p>\n        { description &&  <p>\n            <strong>Description: </strong> {description}\n        </p>}\n\n    </div>\n)\nEducation.propTypes = {\n    education: PropTypes.object.isRequired\n};\n\nexport default Education;","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../store/actions/profile';\n\nconst GithubRepos = ({ username, getGithubRepos, repos }) => {\n    useEffect(() => {\n        getGithubRepos(username);\n    }, [getGithubRepos, username]);\n\n    return (\n        <div className=\"profile-github\">\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\n            {repos.map(repo => (\n                <div key={repo.id} className=\"repo bg-white p-1 my-1\">\n                    <div>\n                        <h4>\n                            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {repo.name}\n                            </a>\n                        </h4>\n                        <p>{repo.description}</p>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nGithubRepos.propTypes = {\n    getGithubRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n    username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(GithubRepos);\n","import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../Layout/Spinner/Spinner';\nimport { getProfileByUserId } from \"../../store/actions/profile\";\nimport About from \"./About\";\nimport ProfileTop from \"./ProfileTop\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nimport GithubRepos from \"./GithubRepos\";\n\nconst Profile = ({ match, getProfileByUserId, profile: { profile, loading } , auth }) => {\n    useEffect(()=> {\n        getProfileByUserId(match.params.id)\n    },[getProfileByUserId, match.params.id]);\n    return (\n        <Fragment>\n            { profile === null || loading ?( <Spinner/> ): (\n                <Fragment>\n                    <Link to=\"/profiles\" className=\"btn btn-light\">\n                        Back To Profiles\n                    </Link>\n                    { auth.isAuthenticated && auth.loading === false && auth.user.id === profile.user.id &&\n                        (<Link to='/edit-profile' className='btn btn-dark'> Edit Profile</Link>)\n                    }\n                    <div className=\"profile-grid my-1\">\n                        <ProfileTop profile={profile} />\n                        <About profile={profile}/>\n                        <div className=\"profile-exp bg-white p-2\">\n                            <h2 className=\"text-primary\">Experience</h2>\n                            { profile.experience.length > 0 ? (\n                                <Fragment>\n                                    { profile.experience.map(exp=> <Experience key={exp._id} experience={exp} />)}\n                                </Fragment>\n                            ) : (<h4>No experience found</h4>)}\n                        </div>\n\n                        <div className=\"profile-edu bg-white p-2\">\n                            <h2 className=\"text-primary\">Education</h2>\n                            { profile.education.length > 0 ? (\n                                <Fragment>\n                                    { profile.education.map(edu=> <Education key={edu._id} experience={edu} />)}\n                                </Fragment>\n                            ) : (<h4>No education found</h4>)}\n                        </div>\n                        { profile.github_username && <GithubRepos username={profile.github_username} /> }\n                    </div>\n                </Fragment>)\n            }\n\n        </Fragment>\n    );\n}\n\nProfile.propsType = {\n    getProfileByUserId: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getProfileByUserId })(Profile);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nimport { addLikes, removeLikes, deletePost } from \"../../store/actions/post\";\n\nconst PostItem = ({\n    addLikes,\n    removeLikes,\n    deletePost,\n    auth,\n    post: {  _id, text, name, avatar, user, likes, comments, date},\n    showActions}) => {\n    return(\n        <div className=\"post bg-white p-1 my-1\">\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img\n                        className=\"round-img\"\n                        src={avatar}\n                        alt=\"\"\n                    />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p className=\"my-1\">{text}</p>\n                <p className=\"post-date\">\n                    Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n                </p>\n                { showActions && <Fragment>\n                    <button type=\"button\" className=\"btn btn-light\" onClick={()=> addLikes(_id)}>\n                        <i className=\"fas fa-thumbs-up\"></i> { ' ' }\n                        { likes.length > 0 &&  <span>{likes.length}</span>}\n\n                    </button>\n                    <button type=\"button\" className=\"btn btn-light\" onClick={()=> removeLikes(_id)}>\n                        <i className=\"fas fa-thumbs-down\"></i>\n                    </button>\n                    <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n                        Discussion { comments.length > 0  && <span className='comment-count'>{comments.length}</span> }\n                    </Link>\n                    { !auth.loading && user === auth.user._id &&\n                        <button\n                            onClick={ ()=> deletePost(_id) }\n                            type=\"button\"\n                            className=\"btn btn-danger\"\n                        >\n                            <i className=\"fas fa-times\"></i>\n                        </button>\n                    }\n                </Fragment>}\n            </div>\n        </div>\n    )\n}\n\nPostItem.defaultProps = {\n    showActions: true\n}\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addLikes: PropTypes.func.isRequired,\n    removeLikes: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nexport default  connect(mapStateToProps, { addLikes, removeLikes, deletePost })(PostItem);","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    DELETE_POST,\n    GET_POSTS, GET_POST,\n    ADD_POST,\n    POST_ERROR,\n    UPDATE_LIKES,\n    ADD_COMMENT,\n    DELETE_COMMENT\n} from \"./actionTypes\";\n\nexport const getPosts = () => async dispatch => {\n    try {\n        console.log('in action post')\n        const res = await axios.get('/api/posts');\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        })\n    } catch(e) {\n        console.error(e);\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status}\n        })\n    }\n}\n\nexport const addLikes = (postId) => async  dispatch => {\n    try {\n        console.log('in action post')\n        const res = await axios.put(`/api/posts/like/${postId}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { postId, likes: res.data}\n        })\n    } catch(e) {\n        console.error(e);\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status}\n        })\n    }\n}\n\nexport const removeLikes = (postId) => async  dispatch => {\n    try {\n        console.log('in action post')\n        const res = await axios.put(`/api/posts/unlike/${postId}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { postId, likes: res.data}\n        })\n    } catch(e) {\n        console.error(e);\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status}\n        })\n    }\n}\n\nexport const addPost = postData => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post('/api/posts', postData, config);\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Post Created', 'success'));\n    } catch (e) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status }\n        });\n    }\n};\nexport const deletePost = id => async dispatch => {\n    try {\n        console.log(id);\n        const res = await axios.delete(`/api/posts/${id}`);\n        console.log(res);\n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        });\n\n        dispatch(setAlert('Post Deleted', 'success'));\n    } catch (e) {\n        console.error(e);\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status }\n        });\n    }\n};\n\nexport const getPost = (id) => async dispatch => {\n    try {\n        console.log('in action post')\n        const res = await axios.get(`/api/posts/${id}`);\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        })\n    } catch(e) {\n        console.error(e);\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status}\n        })\n    }\n}\n\nexport const addComment = (postId, commentData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post(`/api/posts/${postId}/comments/`, commentData, config);\n\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Comment added', 'success'));\n    } catch (e) {\n        console.error(e);\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status }\n        });\n    }\n};\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/posts/${postId}/comments/${commentId}`);\n        console.log(res);\n        dispatch({\n            type: DELETE_COMMENT,\n            payload: commentId\n        });\n\n        dispatch(setAlert('Comment Deleted', 'success'));\n    } catch (e) {\n        console.error(e);\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: e.response.statusText, status: e.response.status }\n        });\n    }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../store/actions/post';\n\nconst PostForm = ({ addPost }) => {\n    const [text, setText] = useState('');\n\n    return (\n        <div className='post-form'>\n            <div className='bg-primary p'>\n                <h3>Say Something...</h3>\n            </div>\n            <form\n                className='form my-1'\n                onSubmit={e => {\n                    e.preventDefault();\n                    addPost({ text });\n                    setText('');\n                }}\n            >\n        <textarea\n            name='text'\n            cols='30'\n            rows='5'\n            placeholder='Create a post'\n            value={text}\n            onChange={e => setText(e.target.value)}\n            required\n        />\n                <input type='submit' className='btn btn-dark my-1' value='Submit' />\n            </form>\n        </div>\n    );\n};\n\nPostForm.propTypes = {\n    addPost: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../store/actions/post';\n\nconst Posts = ({ getPosts, post: { posts } }) => {\n    useEffect(() => {\n        getPosts();\n    }, [getPosts]);\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Posts</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\" /> Welcome to the community\n            </p>\n            <PostForm />\n            <div className=\"posts\">\n                {posts.map((post) => (\n                    <PostItem key={post._id} post={post} />\n                ))}\n            </div>\n        </Fragment>\n    );\n};\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../store/actions/post';\n\nconst Comment = ({ postId, addComment }) => {\n    const [text, setText] = useState('');\n\n    return (\n        <div className='post-form'>\n            <div className='bg-primary p'>\n                <h3>Leave a Comment</h3>\n            </div>\n            <form\n                className='form my-1'\n                onSubmit={e => {\n                    e.preventDefault();\n                    addComment(postId, { text });\n                    setText('');\n                }}\n            >\n                <textarea\n                    name='text'\n                    cols='30'\n                    rows='5'\n                    placeholder='Comment the post'\n                    value={text}\n                    onChange={e => setText(e.target.value)}\n                    required\n                />\n                <input type='submit' className='btn btn-dark my-1' value='Submit' />\n            </form>\n        </div>\n    );\n};\n\nComment.propTypes = {\n    addComment: PropTypes.func.isRequired\n};\n\nexport default connect(\n    null,\n    { addComment }\n)(Comment);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../store/actions/post';\n\nconst CommentItem = ({\n         postId,\n         comment: { _id, text, name, avatar, user, date },\n         auth,\n         deleteComment\n     }) => (\n    <div className='post bg-white p-1 my-1'>\n        <div>\n            <Link to={`/profile/${user}`}>\n                <img className='round-img' src={avatar} alt='' />\n                <h4>{name}</h4>\n            </Link>\n        </div>\n        <div>\n            <p className='my-1'>{text}</p>\n            <p className='post-date'>\n                Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n            </p>\n            {!auth.loading && user === auth.user._id && (\n                <button\n                    onClick={() => deleteComment(postId, _id)}\n                    type='button'\n                    className='btn btn-danger'\n                >\n                    <i className='fas fa-times' />\n                </button>\n            )}\n        </div>\n    </div>\n);\n\nCommentItem.propTypes = {\n    postId: PropTypes.string.isRequired,\n    comment: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { deleteComment }\n)(CommentItem);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../Layout/Spinner/Spinner';\nimport PostItem from '../Posts/PostItem';\nimport Comment from '../Post/Comment';\nimport CommentItem from '../Post/CommentItem';\nimport { getPost } from '../../store/actions/post';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n    useEffect(() => {\n        getPost(match.params.id);\n    }, [getPost, match.params.id]);\n\n    return loading || post === null ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n            <Link to=\"/posts\" className=\"btn\">\n                Back To Posts\n            </Link>\n            <PostItem post={post} showActions={false} />\n            <Comment postId={post._id} />\n            <div className=\"comments\">\n                {post.comments.map((comment) => (\n                    <CommentItem key={comment._id} comment={comment} postId={post._id} />\n                ))}\n            </div>\n        </Fragment>\n    );\n};\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","import React from 'react';\nimport { Route, Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({component: Component, auth, ...rest}) => (\n    <Route\n        {...rest}\n        render={ props =>\n            !auth.isAuthenticated && !auth.loading ?\n                (  <Redirect to='/signin' /> ) : ( <Component {...props} /> )\n        }\n    />\n)\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute);","import * as actionsTypes from '../actions/actionTypes'\n\nconst initialState = []\nconst alert =(state = initialState, action)=> {\n    switch (action.type) {\n        case actionsTypes.SET_ALERT:\n            return [...state, action.payload];\n        case actionsTypes.REMOVE_ALERT:\n            return state.filter(alert => alert.id !== action.payload);\n        default:\n            return state;\n    }\n}\n\nexport default alert;","import {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    USER_LOADED,\n    AUTH_FAIL,\n    SIGNIN_SUCCESS,\n    SIGNIN_FAIL,\n    SIGNOUT,\n    ACCOUNT_DELETED\n} from '../actions/actionTypes';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    loading: true,\n    user: null\n}\n\nconst auth = (state = initialState, actions) => {\n    switch(actions.type){\n        case SIGNUP_SUCCESS:\n        case SIGNIN_SUCCESS:\n            localStorage.setItem('token',actions.payload.token);\n            return {\n                ...state,\n                ...actions.payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case USER_LOADED:\n            return{\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: actions.payload\n            }\n        case SIGNUP_FAIL:\n        case AUTH_FAIL:\n        case SIGNIN_FAIL:\n        case SIGNOUT:\n        case ACCOUNT_DELETED:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport default auth;","import { GET_PROFILE,\n    GET_PROFILES,\n    GET_REPOS,\n    CLEAR_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    loading: true,\n    repos: [],\n    error: {}\n}\n\nconst profile = (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return{\n                ...state,\n                profile: payload,\n                loading: false\n            }\n        case GET_PROFILES:\n            return {\n                ...state,\n                profiles: payload,\n                loading: false\n            }\n        case CLEAR_PROFILE:\n            return{\n                ...state,\n                profile: null,\n                loading: false,\n                repos: []\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n                profile: null\n            }\n        case GET_REPOS:\n            return {\n                ...state,\n                repos: payload,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default profile;","import {\n    ADD_POST,\n    DELETE_POST,\n    GET_POSTS,\n    GET_POST,\n    POST_ERROR,\n    UPDATE_LIKES,\n    ADD_COMMENT,\n    DELETE_COMMENT\n} from '../actions/actionTypes';\n\nconst initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n}\n\nexport default function(state = initialState, action ) {\n    const { type, payload } = action\n\n    switch(type) {\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: payload,\n                loading: false\n            }\n        case GET_POST:\n            return {\n                ...state,\n                post: payload,\n                loading: false\n            }\n        case ADD_POST:\n            console.log(payload);\n            return {\n                ...state,\n                posts: [payload,...state.posts],\n                loading: false\n            }\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== payload),\n                loading: false\n            };\n        case POST_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            }\n        case UPDATE_LIKES:\n            return {\n                ...state,\n                posts: state.posts.map(post=> post._id ===  payload.postId ? {...post, likes: payload.likes} : post ),\n                loading: false\n            }\n        case ADD_COMMENT:\n            return {\n                ...state,\n                post: { ...state.post, comments: payload },\n                loading: false\n            }\n        case DELETE_COMMENT:\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    comments: state.post.comments.filter(comment=> comment._id !== payload)\n                },\n                loading: false\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\n\nexport default combineReducers({\n    alert,\n    auth,\n    profile,\n    post\n});","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers/index';\n\nconst initialState = {};\nconst middleware = [thunk]\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport {  BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from \"./components/Layout/Navbar\";\nimport Landing from \"./components/Layout/Landing\";\nimport SignUp from \"./components/Sessions/SignUp\";\nimport SignIn from \"./components/Sessions/SignIn\";\nimport Alert from \"./components/Layout/Alert\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport CreateProfile from \"./components/Profile/CreateOrUpdateProfile\";\nimport EditProfile from \"./components/Profile/CreateOrUpdateProfile\";\nimport UpdateExperience from \"./components/Profile/UpdateExperience\";\nimport UpdateEducation from \"./components/Profile/UpdateEducation\";\nimport Profiles from \"./components/Profiles/Profiles\";\nimport Profile from \"./components/Profile/Profile\";\nimport Posts from \"./components/Posts/Posts\";\nimport Post from \"./components/Post/Post\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { loadUser} from \"./store/actions/auth\";\nimport PrivateRoute from \"./components/Routing/PrivateRoute\";\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from '../src/store/store';\n//=============\n\nif(localStorage.token){\n    setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n    useEffect(()=> {\n       store.dispatch(loadUser());\n    }, []);\n    return (\n        <Provider store={store}>\n            <Router>\n                <Fragment>\n                    <Navbar/>\n                    <Route exact path='/' component={Landing} />\n                    <section className='container'>\n                        <Alert />\n                        <Switch>\n                            <Route exact path='/signup' component={SignUp} />\n                            <Route exact path='/signin' component={SignIn} />\n                            <Route exact path='/profiles' component={Profiles} />\n                            <Route exact path='/profile/:id' component={Profile} />\n                            <PrivateRoute exact path='/dashboard' component={Dashboard} />\n                            <PrivateRoute exact path='/create-profile' component={CreateProfile} />\n                            <PrivateRoute exact path='/edit-profile' component={EditProfile} />\n                            <PrivateRoute exact path='/update-experience' component={UpdateExperience} />\n                            <PrivateRoute exact path='/update-education' component={UpdateEducation} />\n                            <PrivateRoute exact path='/posts' component={Posts} />\n                            <PrivateRoute exact path='/posts/:id' component={Post} />\n                        </Switch>\n                    </section>\n                </Fragment>\n            </Router>\n        </Provider>\n    )\n    };\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(  <App />, document.getElementById('root'));\n"],"sourceRoot":""}